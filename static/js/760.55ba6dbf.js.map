{"version":3,"file":"js/760.55ba6dbf.js","mappings":"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","sources":["webpack://frontend/./src/views/DashboardView.vue","webpack://frontend/./src/views/DashboardView.vue?7280"],"sourcesContent":["<template>\n    <div class=\"container d-flex flex-column\" style=\"height: calc(100vh - 58px - 4.5rem)\">\n        <div class=\"d-flex flex-column\" style=\"flex: 1; min-height: 100%\">\n            <h1>Dashboard</h1>\n            <div class=\"row mt-4\" style=\"flex: 1\">\n                <div class=\"col-8 d-flex flex-column\">\n                    <h4 class=\"text-center\">Flags retrieved</h4>\n                    <div class=\"mt-3 flex-fill\">\n                        <Line v-if=\"flagsTick\" :data=\"flagsTick\" :options=\"flagsTickOptions\" />\n                    </div>\n                </div>\n                <div class=\"col-4 d-flex flex-column\">\n                    <h4 class=\"text-center\">Submit stats</h4>\n                    <div class=\"mt-3 flex-fill\">\n                        <Pie v-if=\"flagsAccepted\" :data=\"flagsAccepted\" :options=\"flagsAcceptedOptions\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"row mt-4\" style=\"flex: 1\">\n                <div class=\"col-12 d-flex flex-column\">\n                    <h4 class=\"text-center\">Flags retrieved by exploit</h4>\n                    <div class=\"mt-3 flex-fill\">\n                        <Bar v-if=\"flagsAcceptedPerExploit\" :data=\"flagsAcceptedPerExploit\"\n                            :options=\"flagsAcceptedPerExploitOptions\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\"use strict\";\n\nimport * as _ from \"lodash\";\nimport { api, colors } from \"../utils.js\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    BarElement,\n} from \"chart.js\";\nimport { Line, Pie, Bar } from \"vue-chartjs\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    ArcElement,\n    BarElement,\n    Tooltip,\n    Legend\n);\n\nexport default {\n    name: \"Dashboard\",\n    components: { Line, Pie, Bar },\n    data() {\n        return {\n            timer: undefined,\n            flagsTick: undefined,\n            flagsAccepted: undefined,\n            flagsAcceptedPerExploit: undefined,\n            flagsTickOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    x: {\n                        grid: { color: \"#3f3f3f\", borderColor: \"#8b8b8b\" },\n                    },\n                    y: {\n                        grid: { color: \"#3f3f3f\", borderColor: \"#8b8b8b\" },\n                    },\n                },\n            },\n            flagsAcceptedOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n            },\n            flagsAcceptedPerExploitOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n                interaction: {\n                    intersect: false,\n                },\n                scales: {\n                    x: {\n                        stacked: true,\n                    },\n                    y: {\n                        stacked: true,\n                    },\n                },\n            },\n        };\n    },\n    methods: {\n        async getFlagsTick() {\n            let res = [];\n            try {\n                let req = await api.get(\"/stats/flags/tick\");\n                if (req.status == 200)\n                    res = await req.json();\n            } catch (exception) {\n                console.log(exception);\n            }\n            const stamp_now = Date.now() / 1000;\n            const tick_now = stamp_now - (stamp_now % 120);\n            console.log(tick_now);\n\n            let out = [];\n\n            for (let i = 0; i < 15; i++) {\n                let tick = tick_now - 120 * i;\n                let found = res.find((el, i) => el.tick_start === tick)\n\n                if (found) {\n                    out[i] = found\n                } else {\n                    out[i] = {\n                        \"total\": 0,\n                        \"queued\": 0,\n                        \"accepted\": 0,\n                        \"rejected\": 0,\n                        \"tick_start\": tick\n                    }\n                }\n            }\n\n            let labels = out.reverse().map((el) => {\n                return new Date(new Date(el.tick_start * 1000).toUTCString())\n                    .toLocaleString()\n                    .split(\", \")[1]\n                    .slice(0, -3);\n            });\n\n            this.flagsTick = {\n                labels,\n                datasets: [\n                    {\n                        label: \"Flags\",\n                        data: out.map(item => item.total),\n                        fill: true,\n                        backgroundColor: \"#6f42c1\",\n                        borderColor: \"#6f42c1\",\n                    },\n                ],\n            };\n        },\n        async getFlagsAccepted() {\n            let res = { queued: 0, accepted: 0, rejected: 0 }\n            try {\n                let req = await api.get(\"/stats/flags/all\");\n                if (req.status == 200)\n                    res = await req.json();\n            } catch (exception) {\n                console.log(exception);\n            }\n\n            this.flagsAccepted = {\n                labels: [\"Queued\", \"Accepted\", \"Rejected\"],\n                datasets: [\n                    {\n                        data: [res.queued, res.accepted, res.rejected],\n                        backgroundColor: colors.green1,\n                        backgroundColor: [\"#a7acb1\", \"#198754\", \"#dc3545\"],\n                    },\n                ],\n            };\n        },\n        async getFlagsAcceptedPerExploit() {\n            let res = []\n            try {\n                let req = await api.get(\"/stats/flags/scripts\");\n                if (req.status == 200)\n                    res = await req.json();\n            } catch (exception) {\n                console.log(exception);\n            }\n\n            let data = [\n                {\n                    label: \"Accepted\",\n                    data: res.map((item) => (item.accepted / item.total) * 100),\n                    backgroundColor: \"#198754\",\n                    stack: 0,\n                },\n                {\n                    label: \"Rejected\",\n                    data: res.map((item) => (item.rejected / item.total) * 100),\n                    backgroundColor: \"#dc3545\",\n                    stack: 0,\n                },\n                {\n                    label: \"Queued\",\n                    data: res.map((item) => (item.queued / item.total) * 100),\n                    backgroundColor: \"#a7acb1\",\n                    stack: 0,\n                },\n            ];\n\n            this.flagsAcceptedPerExploit = {\n                labels: res.map((item) => item.name),\n                datasets: data,\n            };\n        },\n    },\n    async mounted() {\n        await this.getFlagsTick();\n        await this.getFlagsAccepted();\n        await this.getFlagsAcceptedPerExploit();\n\n        this.timer = setInterval(async () => {\n            await this.getFlagsTick();\n            await this.getFlagsAccepted();\n            await this.getFlagsAcceptedPerExploit();\n        }, 30 * 1000);\n    },\n    async unmounted() {\n        clearInterval(this.timer);\n    },\n};\n</script>\n","import { render } from \"./DashboardView.vue?vue&type=template&id=89fdd756\"\nimport script from \"./DashboardView.vue?vue&type=script&lang=js\"\nexport * from \"./DashboardView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","$data","flagsTick","_createBlock","_component_Line","data","options","flagsTickOptions","_hoisted_8","_hoisted_9","_hoisted_10","flagsAccepted","_component_Pie","flagsAcceptedOptions","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","flagsAcceptedPerExploit","_component_Bar","flagsAcceptedPerExploitOptions","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","ArcElement","BarElement","Tooltip","Legend","name","components","Line","Pie","Bar","timer","undefined","responsive","maintainAspectRatio","scales","x","grid","color","borderColor","y","interaction","intersect","stacked","methods","async","res","req","api","get","status","json","exception","console","log","stamp_now","Date","now","tick_now","out","i","tick","found","find","el","tick_start","labels","reverse","map","toUTCString","toLocaleString","split","slice","this","datasets","label","item","total","fill","backgroundColor","queued","accepted","rejected","colors","green1","stack","getFlagsTick","getFlagsAccepted","getFlagsAcceptedPerExploit","setInterval","clearInterval","__exports__","render"],"sourceRoot":""}